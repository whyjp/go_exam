[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/10/27 - 22:56:42 | 200 |       512.4µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/10/27 - 22:56:42 | 200 |      3.3168ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/10/27 - 22:56:42 | 200 |     17.3473ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/10/27 - 22:56:42 | 200 |     55.2177ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/10/27 - 22:56:42 | 200 |       120.8µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/10/27 - 22:56:43 | 200 |    195.3277ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/10/28 - 11:39:20 | 200 |     18.1474ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/10/28 - 11:39:20 | 200 |     15.4995ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/10/28 - 11:39:20 | 200 |     29.4552ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/10/28 - 11:39:20 | 200 |     48.1881ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/10/28 - 11:39:20 | 200 |       996.8µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/10/28 - 11:39:20 | 200 |     87.6439ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/10/28 - 14:39:44 | 200 |       1.253ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/10/28 - 14:39:44 | 200 |      3.5421ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/10/28 - 14:39:44 | 200 |     21.0606ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/10/28 - 14:39:44 | 200 |     77.7065ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/10/28 - 14:39:44 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/10/28 - 14:40:39 | 200 |       542.6µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/10/28 - 14:40:39 | 200 |      6.5509ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/10/28 - 14:40:39 | 200 |     30.5863ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/10/28 - 14:40:39 | 200 |     71.2343ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/10/28 - 14:40:39 | 200 |         396µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/10/28 - 14:40:39 | 200 |     79.3638ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/10/28 - 14:42:26 | 200 |      1.1733ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/10/28 - 14:42:26 | 200 |      7.0212ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/10/28 - 14:42:26 | 200 |     45.0138ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/10/28 - 14:42:26 | 200 |     74.4548ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/10/28 - 14:42:26 | 200 |         693µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/10/28 - 14:42:26 | 200 |     73.4178ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/10/28 - 14:42:53 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/10/28 - 14:42:54 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/10/28 - 14:42:55 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/10/28 - 14:42:55 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/10/28 - 14:51:04 | 200 |         522µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/10/28 - 14:51:04 | 200 |      6.4117ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/10/28 - 14:51:05 | 200 |     26.7915ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/10/28 - 14:51:05 | 200 |     89.2268ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/10/28 - 14:51:05 | 200 |       998.2µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/10/28 - 14:51:05 | 200 |     94.1073ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/10/28 - 14:51:56 | 422 |     84.2236ms |             ::1 | POST     "/v1/jsonMailTest"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/10/28 - 14:54:19 | 200 |      1.1734ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/10/28 - 14:54:19 | 200 |      2.8849ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/10/28 - 14:54:19 | 200 |     20.2671ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/10/28 - 14:54:19 | 200 |     86.8019ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/10/28 - 14:54:19 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/10/28 - 14:54:20 | 200 |     91.3131ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/10/28 - 14:54:44 | 200 |      2.0467ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/10/28 - 14:54:44 | 200 |      4.1126ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/10/28 - 14:54:44 | 200 |     31.8516ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/10/28 - 14:54:44 | 200 |     55.0845ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/10/28 - 14:54:44 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/10/28 - 14:54:44 | 200 |     70.3353ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/10/28 - 14:55:03 | 400 |     23.8082ms |             ::1 | POST     "/v1/jsonMailTest"
[GIN] 2021/10/28 - 14:55:34 | 200 |    3.9831306s |             ::1 | POST     "/v1/jsonMailTest"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/02 - 12:07:37 | 200 |       583.6µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/02 - 12:07:37 | 200 |      5.0291ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/02 - 12:07:37 | 200 |     27.5669ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/02 - 12:07:37 | 200 |     54.0216ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/02 - 12:07:37 | 200 |      48.586ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/02 - 12:07:37 | 200 |     94.2307ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/02 - 12:07:54 | 400 |    1.1527432s |             ::1 | POST     "/v1/jsonMailTest"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/02 - 22:33:01 | 200 |      1.7748ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/02 - 22:33:01 | 200 |      3.7932ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/02 - 22:33:01 | 200 |     27.9569ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/02 - 22:33:01 | 200 |     71.9168ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/02 - 22:33:01 | 200 |       640.7µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/02 - 22:33:01 | 200 |     80.3145ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/02 - 22:33:20 | 400 |     31.9022ms |             ::1 | POST     "/v1/jsonMailTest"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/02 - 22:54:00 | 400 |      6.5157ms |             ::1 | POST     "/v1/jsonMailTest"
[GIN] 2021/11/02 - 22:54:59 | 200 |       557.7µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/02 - 22:54:59 | 304 |       731.9µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/02 - 22:54:59 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/02 - 22:54:59 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/02 - 22:54:59 | 200 |      2.0628ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/02 - 22:54:59 | 304 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/02 - 22:58:12 | 400 |       6.214ms |             ::1 | POST     "/v1/jsonMailTest"
[GIN] 2021/11/02 - 22:58:23 | 404 |            0s |             ::1 | GET      "/v1/jsonMailTest"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 15:02:22 | 200 |      1.1228ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 15:02:22 | 200 |        5.06ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 15:02:22 | 200 |     21.3286ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 15:02:23 | 200 |     77.0613ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 15:02:23 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 15:02:30 | 400 |     40.2723ms |             ::1 | POST     "/v1/jsonMailTest"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 15:40:13 | 200 |      1.4103ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 15:40:13 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 15:40:13 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 15:40:13 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 15:40:13 | 200 |       741.3µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 15:40:13 | 200 |     76.1244ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 15:40:18 | 400 |      6.7215ms |             ::1 | POST     "/v1/jsonMailTest"
[GIN] 2021/11/03 - 15:41:39 | 200 |     4.187217s |             ::1 | POST     "/v1/jsonMailTest"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:07:39 | 200 |       996.6µs |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:08:34 | 200 |     23.4827ms |             ::1 | GET      "/health"
[GIN] 2021/11/03 - 18:08:39 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/03 - 18:08:42 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:10:56 | 200 |       513.1µs |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:19:31 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:21:44 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:25:38 | 200 |      1.1577ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:25:38 | 200 |      4.6637ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:25:38 | 200 |     27.9404ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:25:38 | 200 |     72.3386ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:25:38 | 200 |       249.9µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:25:38 | 200 |     91.3152ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 18:25:40 | 200 |       492.8µs |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:26:07 | 200 |       1.832ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:26:07 | 200 |      5.9828ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:26:07 | 200 |      20.104ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:26:07 | 200 |     62.6218ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:26:07 | 200 |       999.5µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:26:07 | 200 |      85.033ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 18:26:10 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:30:33 | 200 |      1.0917ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:30:33 | 200 |      5.5243ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:30:33 | 200 |     31.8924ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:30:33 | 200 |     69.5852ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:30:33 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:30:33 | 200 |      90.366ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 18:30:35 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:31:30 | 200 |      1.4508ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:31:30 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:31:30 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:31:30 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:31:30 | 200 |       510.2µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:31:30 | 304 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 18:31:33 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:32:14 | 200 |      2.3208ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:32:14 | 200 |      3.9989ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:32:14 | 200 |     29.3249ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:32:14 | 200 |     65.8637ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:32:14 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:32:14 | 200 |     74.3608ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 18:32:17 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:33:14 | 200 |       540.3µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:33:14 | 200 |      5.7684ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:33:14 | 200 |      21.754ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:33:14 | 200 |     48.9195ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:33:14 | 200 |       942.7µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:33:14 | 200 |     77.4724ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 18:33:16 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/03 - 18:33:18 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:33:43 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /v1/param/:test/*action   --> webzen.com/notifyhandler/api.Param (5 handlers)
[GIN-debug] POST   /v1/jsonMailTest          --> webzen.com/notifyhandler/api.JsonMailTest (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:45:08 | 200 |       541.3µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:45:08 | 200 |     11.3571ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:45:08 | 200 |     16.2341ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:45:09 | 200 |     65.4203ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:45:09 | 200 |       996.5µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:45:09 | 200 |     81.5694ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:45:36 | 200 |       809.7µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:45:36 | 200 |      4.9855ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:45:36 | 200 |     23.2084ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:45:36 | 200 |     58.7365ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:45:37 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:45:37 | 200 |     75.9872ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 18:45:42 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:45:42 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:45:42 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:45:42 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:45:42 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:45:42 | 304 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:46:03 | 200 |       560.1µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:46:03 | 200 |      4.4854ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:46:03 | 200 |      26.603ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:46:03 | 200 |     61.9071ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:46:03 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:46:03 | 200 |     77.6402ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 18:46:08 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:46:08 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:46:08 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:46:08 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:46:08 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:46:08 | 304 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 18:53:28 | 200 |      1.0788ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 18:53:28 | 200 |      6.4073ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 18:53:28 | 200 |     27.3777ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 18:53:28 | 200 |     59.1907ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 18:53:28 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 18:53:28 | 200 |     73.6988ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server.logResponseBody (6 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 20:09:37 | 200 |       569.2µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 20:09:37 | 200 |      2.9911ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 20:09:37 | 200 |     20.9952ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 20:09:38 | 200 |     67.7593ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 20:09:38 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 20:09:38 | 200 |     80.2343ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 200 with 500
[GIN] 2021/11/03 - 20:09:41 | 500 |      3.9047ms |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 20:48:17 | 200 |      1.7318ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 20:48:17 | 200 |     15.2508ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 20:48:17 | 200 |     35.6117ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 20:48:17 | 200 |     84.0542ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 20:48:17 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 20:48:17 | 200 |     83.9785ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 20:48:22 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/03 - 20:48:25 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:09:54 | 200 |      1.2786ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:09:54 | 200 |      6.9604ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 21:09:54 | 200 |     36.9735ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 21:09:54 | 200 |     60.3126ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 21:09:54 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:09:55 | 200 |     84.2772ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 21:10:28 | 404 |            0s |             ::1 | POST     "/v1/Grafana/mail"
[GIN] 2021/11/03 - 21:10:56 | 404 |            0s |             ::1 | POST     "/v1/Grafana/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:11:47 | 200 |       1.096ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:11:47 | 200 |      5.0802ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 21:11:47 | 200 |     30.3427ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 21:11:47 | 200 |     68.0164ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 21:11:47 | 200 |      1.4193ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:11:47 | 200 |     85.7081ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 21:11:53 | 500 |      15.707ms |             ::1 | POST     "/v1/grafana/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:12:56 | 500 |      9.9283ms |             ::1 | POST     "/v1/grafana/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:14:23 | 200 |       543.7µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:14:23 | 200 |      6.3784ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 21:14:23 | 200 |     32.4377ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 21:14:23 | 200 |     53.1269ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 21:14:23 | 200 |       627.5µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:14:23 | 200 |     79.7969ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:15:09 | 200 |      1.3061ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:15:09 | 200 |       4.032ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 21:15:09 | 200 |     22.4069ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 21:15:09 | 200 |     60.5213ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 21:15:09 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:15:09 | 200 |     79.1228ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 21:16:04 | 500 |     28.7257ms |             ::1 | POST     "/v1/grafana/mail"
[GIN] 2021/11/03 - 21:16:48 | 400 |       517.9µs |             ::1 | POST     "/v1/public/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:18:02 | 200 |         998µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:18:02 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 21:18:02 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 21:18:02 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 21:18:02 | 200 |       997.6µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:18:02 | 304 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 21:18:10 | 200 |       721.2µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:18:10 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:18:13 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:18:13 | 200 |       753.3µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:18:33 | 200 |       537.5µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:18:33 | 200 |      5.4968ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 21:18:33 | 200 |     29.7636ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 21:18:33 | 200 |     63.9839ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 21:18:33 | 200 |      1.8815ms |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:18:33 | 200 |      75.732ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 21:18:40 | 500 |     10.8244ms |             ::1 | POST     "/v1/public/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:29:21 | 500 |     14.4156ms |             ::1 | POST     "/v1/public/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:29:43 | 200 |      1.4317ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:29:44 | 200 |        6.12ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 21:29:44 | 200 |     37.3184ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 21:29:44 | 200 |     44.1042ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 21:29:44 | 200 |       946.3µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:29:44 | 200 |     86.2925ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/03 - 21:29:52 | 500 |      9.5669ms |             ::1 | POST     "/v1/public/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:30:23 | 500 |     31.0422ms |             ::1 | POST     "/v1/public/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:33:27 | 500 |     11.0197ms |             ::1 | POST     "/v1/public/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/03 - 21:35:15 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/03 - 21:35:15 | 200 |      7.4533ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/03 - 21:35:15 | 200 |      17.801ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/03 - 21:35:15 | 200 |     57.8674ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/03 - 21:35:15 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/03 - 21:35:15 | 200 |     81.3247ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/public/mail           --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/public/teams          --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Public.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Public.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 16:17:01 | 200 |      1.0496ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 16:17:01 | 200 |      7.8533ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 16:17:01 | 200 |     15.6583ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 16:17:01 | 200 |     80.9782ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 16:17:01 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 16:17:04 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 16:17:04 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 16:17:04 | 200 |      75.902ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/04 - 16:17:20 | 200 |       860.8µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 16:17:20 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 16:18:35 | 200 |       896.4µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 16:18:35 | 200 |      2.9256ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 16:18:35 | 200 |     19.9902ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 16:18:35 | 200 |     56.1135ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 16:18:35 | 200 |       515.7µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 16:18:35 | 200 |     71.3914ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 17:22:41 | 200 |       876.6µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 17:22:41 | 200 |      3.6184ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 17:22:41 | 200 |     21.2446ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 17:22:41 | 200 |     74.9836ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 17:22:41 | 200 |       309.5µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 17:22:41 | 200 |     83.2175ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 17:26:14 | 200 |         810µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 17:26:14 | 200 |     10.9708ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 17:26:14 | 200 |     26.2167ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 17:26:15 | 200 |     50.4465ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 17:26:15 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 17:26:15 | 200 |     75.6014ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 18:13:16 | 200 |       526.9µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 18:13:16 | 200 |       2.787ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 18:13:16 | 200 |     13.7563ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 18:13:16 | 200 |     41.9205ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 18:13:16 | 200 |       990.3µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 18:13:17 | 200 |     178.522ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 19:49:39 | 200 |       511.7µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 19:49:39 | 200 |      4.8904ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 19:49:39 | 200 |     18.9723ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 19:49:39 | 200 |     53.6932ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 19:49:39 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 19:49:41 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 19:49:41 | 304 |        92.5µs |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 19:49:41 | 304 |       572.8µs |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 19:49:41 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 19:49:41 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 19:49:41 | 200 |    183.8598ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/04 - 19:50:13 | 200 |       176.5µs |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 19:56:48 | 200 |    21.049683s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 20:00:31 | 200 |      1.8618ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 20:00:31 | 200 |      2.6349ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 20:00:31 | 200 |     14.5879ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 20:00:31 | 200 |     45.7068ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 20:00:31 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 20:00:32 | 200 |    191.9407ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/04 - 20:00:56 | 200 |   21.0352998s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 20:08:59 | 200 |      1.1387ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 20:08:59 | 200 |      9.5015ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 20:08:59 | 200 |     38.9068ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 20:08:59 | 200 |      87.677ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 20:08:59 | 200 |       506.7µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 20:09:00 | 200 |    199.3157ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/04 - 20:30:39 | 500 |        21m15s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 20:33:55 | 200 |       506.1µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 20:33:55 | 200 |      6.1873ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 20:33:55 | 200 |     31.7776ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 20:33:55 | 200 |     82.7777ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 20:33:55 | 200 |       511.9µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 20:33:55 | 200 |    203.2744ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/04 - 20:34:23 | 500 |   26.0196794s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 20:37:08 | 200 |      1.0482ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 20:37:08 | 200 |      7.5016ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 20:37:08 | 200 |     37.0384ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 20:37:08 | 200 |     82.0646ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 20:37:08 | 200 |         544µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 20:37:09 | 200 |    193.9711ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 20:54:25 | 200 |         507µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/04 - 20:54:25 | 200 |      3.3849ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/04 - 20:54:25 | 200 |     20.0651ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/04 - 20:54:25 | 200 |     47.1069ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/04 - 20:54:25 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/04 - 20:54:26 | 200 |    232.6998ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/04 - 20:54:49 | 500 |   21.0668249s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 20:59:07 | 500 |   21.0509671s |             ::1 | POST     "/v1/mail"
[GIN] 2021/11/04 - 20:59:18 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/04 - 20:59:22 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/04 - 21:01:26 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/04 - 21:01:27 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/04 - 21:01:51 | 200 |   21.0614916s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 10:25:14 | 200 |      2.8237ms |       127.0.0.1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 10:25:14 | 200 |     10.2278ms |       127.0.0.1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 10:25:14 | 200 |     22.6128ms |       127.0.0.1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 10:25:14 | 200 |     65.4512ms |       127.0.0.1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 10:25:14 | 200 |            0s |       127.0.0.1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 14:19:32 | 200 |       987.7µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 14:19:32 | 304 |       997.1µs |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 14:19:32 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 14:19:32 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 14:19:32 | 200 |       997.3µs |             ::1 | GET      "/swagger/doc.json"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 16:57:13 | 200 |       540.6µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 16:57:13 | 200 |      2.3981ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 16:57:13 | 200 |     27.0865ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 16:57:13 | 200 |      71.491ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 16:57:13 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 16:57:13 | 200 |     78.7431ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 16:59:03 | 200 |      1.0253ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 16:59:03 | 200 |     12.4262ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 16:59:03 | 200 |     34.7742ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 16:59:03 | 200 |     90.6165ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 16:59:03 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 16:59:03 | 200 |     90.4021ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/05 - 17:01:46 | 200 |    4.8464418s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:01:46 | 200 |       504.5µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:01:55 | 200 |       969.5µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:01:55 | 200 |    7.3706987s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:01:55 | 200 |       2.645ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:01:55 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 17:01:55 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 17:01:55 | 304 |            0s |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 17:01:55 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 17:01:55 | 304 |            0s |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/05 - 17:02:11 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/05 - 17:02:55 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/05 - 17:03:10 | 500 |     34.8004ms |             ::1 | POST     "/v1/teams"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 17:05:00 | 200 |       582.8µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:05:00 | 200 |      4.7307ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 17:05:00 | 200 |      42.532ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 17:05:00 | 200 |     64.8638ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 17:05:00 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 17:05:01 | 200 |     85.7669ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 17:06:08 | 200 |      1.1107ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:06:08 | 200 |      12.801ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 17:06:08 | 200 |     24.8102ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 17:06:08 | 200 |     67.1691ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 17:06:09 | 200 |       427.6µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 17:06:09 | 200 |     75.9455ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/05 - 17:06:13 | 200 |            0s |             ::1 | GET      "/health"
[GIN] 2021/11/05 - 17:06:38 | 500 |     33.0538ms |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 17:15:07 | 200 |      1.2559ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:15:07 | 200 |      3.2491ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 17:15:07 | 200 |     33.0757ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 17:15:07 | 200 |     63.5062ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 17:15:07 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 17:15:07 | 200 |      81.473ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 17:29:58 | 500 |        11m53s |             ::1 | POST     "/v1/mail"
[GIN] 2021/11/05 - 17:30:27 | 200 |      4.2204ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:30:28 | 200 |     11.6332ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 17:30:28 | 200 |     38.4703ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 17:30:28 | 200 |      96.273ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 17:30:28 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 17:30:28 | 200 |     82.2087ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/05 - 17:30:38 | 500 |     26.23951s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 17:31:52 | 200 |      1.0717ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 17:31:52 | 200 |      8.0939ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 17:31:52 | 200 |     33.6759ms |       127.0.0.1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 17:31:52 | 200 |     97.2422ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 17:31:52 | 200 |       997.7µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 17:31:52 | 200 |     91.3571ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/05 - 17:33:59 | 500 |          2m0s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 17:35:15 | 500 |   16.7059262s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/05 - 18:41:20 | 200 |       548.7µs |       127.0.0.1 | GET      "/swagger/index.html"
[GIN] 2021/11/05 - 18:41:20 | 200 |      2.9912ms |       127.0.0.1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/05 - 18:41:20 | 200 |     24.4669ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/05 - 18:41:20 | 200 |     54.3468ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/05 - 18:41:20 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/05 - 18:41:20 | 200 |     76.3715ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/05 - 18:41:20 | 304 |       340.4µs |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/05 - 18:42:34 | 200 |    3.7934895s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 12:16:31 | 200 |       812.6µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/08 - 12:16:31 | 200 |      8.2448ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/08 - 12:16:32 | 200 |     38.5639ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/08 - 12:16:32 | 200 |     63.2696ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/08 - 12:16:32 | 200 |       997.2µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/08 - 12:16:32 | 200 |     81.7581ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/08 - 12:16:37 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (4 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (4 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (4 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (4 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (4 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (4 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (4 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (4 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (4 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (4 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (4 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 12:17:37 | 200 |       510.2µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/08 - 12:17:37 | 200 |            0s |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/08 - 12:17:37 | 200 |      1.9945ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/08 - 12:17:37 | 200 |      5.4273ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/08 - 12:17:37 | 200 |       997.1µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/08 - 12:17:38 | 200 |     76.3733ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/08 - 12:17:40 | 200 |            0s |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 12:18:01 | 200 |       259.3µs |             ::1 | GET      "/health"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 15:41:13 | 200 |    141.8708ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/08 - 15:41:13 | 200 |     28.0361ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/08 - 15:41:13 | 200 |     36.8163ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/08 - 15:41:13 | 200 |            0s |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/08 - 15:41:13 | 200 |     56.5454ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/08 - 15:41:13 | 200 |     35.8415ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/08 - 15:41:13 | 200 |       546.5µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/08 - 15:41:14 | 200 |     91.0985ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 16:52:32 | 200 |      1.4849ms |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/08 - 16:52:32 | 200 |      4.4985ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/08 - 16:52:32 | 200 |     25.0365ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/08 - 16:52:32 | 200 |     57.1289ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/08 - 16:52:32 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/08 - 16:52:32 | 200 |     80.2492ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/08 - 16:53:03 | 500 |      5.5119ms |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 16:53:38 | 500 |      3.7791ms |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 16:54:57 | 500 |    38.756464s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 16:57:04 | 200 |     4.078629s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 16:59:53 | 200 |     44.44134s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 17:05:45 | 200 |    3.7125441s |             ::1 | POST     "/v1/mail"
[GIN] 2021/11/08 - 17:06:59 | 200 |       998.5µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/08 - 17:06:59 | 200 |      3.9891ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/08 - 17:06:59 | 200 |     24.2165ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/08 - 17:06:59 | 200 |     61.9635ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/08 - 17:07:00 | 200 |       389.6µs |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/08 - 17:07:00 | 200 |     82.9007ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/08 - 17:07:07 | 200 |    3.6107601s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (5 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (5 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 17:09:42 | 200 |   21.3042891s |             ::1 | POST     "/v1/mail"
[GIN] 2021/11/08 - 17:12:09 | 200 |   11.7965939s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /v1/mail                  --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/teams                 --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/mail          --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /v1/grafana/teams         --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 17:13:44 | 200 |    2.9833255s |             ::1 | POST     "/v1/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /notify/mail              --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /notify/teams             --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /notify/grafana/mail      --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /notify/grafana/teams     --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 18:40:52 | 404 |            0s |             ::1 | POST     "/v1/mail"
[GIN] 2021/11/08 - 18:41:01 | 200 |       510.3µs |             ::1 | GET      "/swagger/index.html"
[GIN] 2021/11/08 - 18:41:01 | 200 |      3.6954ms |             ::1 | GET      "/swagger/swagger-ui.css"
[GIN] 2021/11/08 - 18:41:01 | 200 |     27.2513ms |             ::1 | GET      "/swagger/swagger-ui-standalone-preset.js"
[GIN] 2021/11/08 - 18:41:01 | 200 |     70.0652ms |             ::1 | GET      "/swagger/swagger-ui-bundle.js"
[GIN] 2021/11/08 - 18:41:01 | 200 |            0s |             ::1 | GET      "/swagger/doc.json"
[GIN] 2021/11/08 - 18:41:01 | 200 |     87.6176ms |             ::1 | GET      "/swagger/favicon-32x32.png"
[GIN] 2021/11/08 - 18:41:07 | 500 |      6.4305ms |             ::1 | POST     "/notify/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /notify/mail              --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /notify/teams             --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /notify/grafana/mail      --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /notify/grafana/teams     --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 18:42:19 | 500 |    3.2182471s |             ::1 | POST     "/notify/mail"
[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /swagger/*any             --> github.com/swaggo/gin-swagger.CustomWrapHandler.func1 (5 handlers)
[GIN-debug] GET    /health                   --> webzen.com/notifyhandler/server/api.HealthController.Status-fm (5 handlers)
[GIN-debug] POST   /notify/mail              --> webzen.com/notifyhandler/server/api.Universal.MailHandler-fm (6 handlers)
[GIN-debug] POST   /notify/teams             --> webzen.com/notifyhandler/server/api.Universal.TeamsHandler-fm (6 handlers)
[GIN-debug] POST   /notify/grafana/mail      --> webzen.com/notifyhandler/server/api.Grafana.MailHandler-fm (6 handlers)
[GIN-debug] POST   /notify/grafana/teams     --> webzen.com/notifyhandler/server/api.Grafana.TeamsHandler-fm (6 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2021/11/08 - 18:43:53 | 200 |   12.5106227s |             ::1 | POST     "/notify/mail"
