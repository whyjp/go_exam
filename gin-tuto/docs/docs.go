// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "notifyhandler server heath check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "site health check is running will return \"working!\"",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/grafana/mail": {
            "post": {
                "description": "자세한 설명은 이곳에 적습니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Grafana mail api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send mail",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StGrafanaAlert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/grafana/teams": {
            "post": {
                "description": "자세한 설명은 이곳에 적습니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Grafana teams api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send teams",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StGrafanaAlert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/public/mail": {
            "post": {
                "description": "자세한 설명은 이곳에 적습니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "public mail api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send mail",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StPublicProducerMail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v1/public/teams": {
            "post": {
                "description": "자세한 설명은 이곳에 적습니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Grafana teams api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send teams",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StPublicProducerTeams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "model.StGrafanaAlert": {
            "type": "object",
            "properties": {
                "dashboardId": {
                    "type": "integer"
                },
                "evalMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.stEvalMatch"
                    }
                },
                "imageUrl": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "orgId": {
                    "type": "integer"
                },
                "panelId": {
                    "type": "integer"
                },
                "ruleId": {
                    "type": "integer"
                },
                "ruleName": {
                    "type": "string"
                },
                "ruleUrl": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.StPublicProducerMail": {
            "type": "object",
            "required": [
                "cc",
                "content",
                "from",
                "producer",
                "title",
                "to"
            ],
            "properties": {
                "cc": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "producer": {
                    "type": "string",
                    "example": "wiss or wingo or kiss or more"
                },
                "title": {
                    "type": "string"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.StPublicProducerTeams": {
            "type": "object",
            "required": [
                "content",
                "from",
                "producer",
                "title",
                "touri"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "producer": {
                    "type": "string",
                    "example": "wiss or wingo or kiss or more"
                },
                "title": {
                    "type": "string"
                },
                "touri": {
                    "type": "string",
                    "example": "http://xxx.x.xx.xxx.x."
                }
            }
        },
        "model.stEvalMatch": {
            "type": "object",
            "properties": {
                "metric": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "#/definitions/model.stEvalMatchTags"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "model.stEvalMatchTags": {
            "type": "object"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
