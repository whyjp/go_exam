{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/health": {
            "get": {
                "description": "notifyhandler server heath check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "site health check is running will return \"working!\"",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/notify/email": {
            "post": {
                "description": "universal notify api for email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "universal Email api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send email",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UniversalProducerEMail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/notify/grafana/email": {
            "post": {
                "description": "그라파나로 부터 메일을 통해 메세지를 보내고자할 때 사용 합니다",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Grafana mail api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send email",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GrafanaAlert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/notify/grafana/teams": {
            "post": {
                "description": "그라파나로 부터 팀즈 를 향해 메세지를 보내고자 할 때 사용 합니다",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Grafana teams api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send teams",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GrafanaAlert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/notify/teams": {
            "post": {
                "description": "universal notify api for teams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Grafana teams api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send teams",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UniversalProducerTeams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/rule/silent": {
            "post": {
                "description": "rule notify api for email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "rule Email api  : have just post api",
                "parameters": [
                    {
                        "description": "json struct for send email",
                        "name": "jsonbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UniversalProducerEMail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "model.GrafanaAlert": {
            "type": "object",
            "properties": {
                "dashboardId": {
                    "type": "integer"
                },
                "evalMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.evalMatch"
                    }
                },
                "imageUrl": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "orgId": {
                    "type": "integer"
                },
                "panelId": {
                    "type": "integer"
                },
                "ruleId": {
                    "type": "integer"
                },
                "ruleName": {
                    "type": "string"
                },
                "ruleUrl": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.UniversalProducerEMail": {
            "type": "object",
            "required": [
                "content",
                "from",
                "producer",
                "title",
                "to"
            ],
            "properties": {
                "bcc": {
                    "type": "string",
                    "example": "xxx@yyyy.com;yyy@xxxx.co.kr"
                },
                "cc": {
                    "type": "string",
                    "example": "xxx@yyyy.com;yyy@xxxx.co.kr"
                },
                "content": {
                    "type": "string",
                    "example": "swagger webapp test send notify\nhi\nhello\ngoodbye\nim swagger notify handler"
                },
                "from": {
                    "type": "string",
                    "example": "swagger webapp"
                },
                "image_url": {
                    "type": "string",
                    "example": "http://internal.image.url/imgname.jpg"
                },
                "producer": {
                    "type": "string",
                    "example": "swagger"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        " region": "KR",
                        "game": "MUA2"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "swagger webapp test send notify"
                },
                "to": {
                    "type": "string",
                    "example": "xxx@yyyy.com;yyy@xxxx.co.kr"
                }
            }
        },
        "model.UniversalProducerTeams": {
            "type": "object",
            "required": [
                "content",
                "from",
                "producer",
                "title",
                "touri"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "swagger webapp test send notify\nhi\nhello\ngoodbye\nim swagger notify handler"
                },
                "from": {
                    "type": "string",
                    "example": "swagger webapp"
                },
                "image_url": {
                    "type": "string",
                    "example": "http://internal.image.url/imgname.jpg"
                },
                "producer": {
                    "type": "string",
                    "example": "swagger"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        " region": "KR",
                        "game": "MUA2"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "swagger webapp test send notify"
                },
                "touri": {
                    "type": "string",
                    "example": "http://xxx.x.xx.xxx.x;http://xxx.x.xx.xxx.x"
                }
            }
        },
        "model.evalMatch": {
            "type": "object",
            "properties": {
                "metric": {
                    "type": "string"
                },
                "tags": {
                    "$ref": "#/definitions/model.evalMatchTags"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "model.evalMatchTags": {
            "type": "object"
        }
    }
}